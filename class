class Product:
 _next_product_id = 1
 SUPERMARKET_NAME = "SuperMart"
 def __init__(self, name, price, manufacturer, weight, expiration_date, 
year):
 self._product_id = Product._next_product_id
 Product._next_product_id += 1
 self.name = name
 self.price = price
 self.manufacturer = manufacturer
 self.weight = weight
 self.expiration_date = expiration_date
 self.year = year
 def print_details(self):
 print("Product ID:", self._product_id)
 print("Supermarket Name:", Product.SUPERMARKET_NAME)
 print("Name:", self.name)
 print("Price:", self.price)
 print("Manufacturer:", self.manufacturer)
 print("Weight:", self.weight)
 print("Expiration Date:", self.expiration_date)
 print("Year:", self.year)
class Healthy(Product):
 def __init__(self, name, price, manufacturer, weight, expiration_date, 
year, calories=0, components=""):
 super().__init__(name, price, manufacturer, weight, expiration_date, 
year)
 self.calories = calories
 self.components = components
 def add_calories(self, calories):
 self.calories = calories
 def print_details(self):
 super().print_details()
 print("Calories:", self.calories)
 print("Components:", self.components)
 def compute_total_calories(self):
 return self.calories * self.weight
def main():
 while True:
 print("Welcome to Supermarket Cashier System")
 print("1. Product Sub-System")
 print("2. Healthy Sub-System")
 print("3. Exit")
 choice = int(input("Enter your choice: "))
 if choice == 1:
 product_options()
 elif choice == 2:
 healthy_options()
 elif choice == 3:
 print("Exiting Supermarket Cashier System")
 break
 else:
 print("Invalid choice. Please enter again.")
def product_options():
 while True:
 print("\nProduct Sub-System")
 print("1. Add new Product")
 print("2. Display Product Details")
 print("3. Change/Edit product_ID")
 print("4. Check calories and components of Healthy Product")
 print("5. Exit the sub-system")
 choice = int(input("Enter your choice: "))
 if choice == 1:
 add_new_product()
 elif choice == 2:
 display_product_details()
 elif choice == 3:
 change_product_id()
 elif choice == 4:
 print("This option is only available in the Healthy Sub-System.")
 elif choice == 5:
 print("Exiting Product Sub-System")
 break
 else:
 print("Invalid choice. Please enter again.")
def add_new_product():
 name = input("Enter product name: ")
 price = float(input("Enter product price: "))
 manufacturer = input("Enter manufacturer: ")
 weight = float(input("Enter product weight: "))
 expiration_date = input("Enter expiration date: ")
 year = int(input("Enter year: "))
 product = Product(name, price, manufacturer, weight, expiration_date, 
year)
 print("Product added successfully. Product ID:", product._product_id)
def display_product_details():

 sample_product = Product("Sample Product", 10.99, "Sample Inc.", 500, 
"2024-12-31", 2024)
 sample_product.print_details()
def change_product_id():
 print("This feature is not implemented yet.")
def healthy_options():
 while True:
 print("\nHealthy Sub-System")
 print("1. Add new Healthy Product")
 print("2. Display Healthy Product Details")
 print("3. Change/Edit calories")
 print("4. Check calories and components of Healthy Product")
 print("5. Compute total calories of the Healthy Product")
 print("6. Exit the sub-system")
 choice = int(input("Enter your choice: "))
 if choice == 1:
 add_new_healthy_product()
 elif choice == 2:
 display_healthy_product_details()
 elif choice == 3:
 change_calories()
 elif choice == 4:
 check_calories_and_components()
 elif choice == 5:
 compute_total_calories()
 elif choice == 6:
 print("Exiting Healthy Sub-System")
 break
 else:
 print("Invalid choice. Please enter again.")
def add_new_healthy_product():
 name = input("Enter product name: ")
 price = float(input("Enter product price: "))
 manufacturer = input("Enter manufacturer: ")
 weight = float(input("Enter product weight: "))
 expiration_date = input("Enter expiration date: ")
 year = int(input("Enter year: "))
 calories = int(input("Enter calories: "))
 components = input("Enter components: ")
 product = Healthy(name, price, manufacturer, weight, expiration_date, 
year, calories, components)
 print("Healthy Product added successfully. Product ID:", 
product._product_id)
def display_healthy_product_details():

 sample_healthy_product = Healthy("Sample Healthy Product", 15.99, 
"Healthy Inc.", 300, "2024-12-31", 2024, 200, "Vitamins, Minerals")
 sample_healthy_product.print_details()
def change_calories():
 print("This feature is not implemented yet.")
def check_calories_and_components():
 print("This feature is not implemented yet.")
def compute_total_calories():
 weight = float(input("Enter weight (in grams): "))
 product_id = int(input("Enter product ID: "))
 sample_healthy_product = Healthy("Sample Healthy Product", 15.99, 
"Healthy Inc.", 300, "2024-12-31", 2024, 200, "Vitamins, Minerals")
 total_calories = sample_healthy_product.compute_total_calories()
 print("Total calories:", total_calories)
if __name__ == "__main__":
 main()
